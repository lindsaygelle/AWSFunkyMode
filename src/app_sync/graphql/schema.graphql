input CreateUserInput {
    email: String!
    pk: ID!
}

input DeleteUserInput {
    pk: ID!
}

input GetUserInput {
    pk: ID!
}

input GetUsersInput {
    limit: Int
    nextToken: String
}

input UpdateUserInput {
    pk: ID!
}

type User {
    createdAt: AWSDateTime!
    email: AWSEmail!
    pk: ID!
    sk: ID!
    updatedAt: AWSDateTime!
}

type UserConnection {
    nextToken: String
    users: [User]
}

type UserSetting {
    createdAt: AWSDateTime!
    pk: ID!
    sk: ID!
    updatedAt: AWSDateTime!
    userName: String!
}

type Mutation {
    createUser(input: CreateUserInput): User!
        @aws_auth(cognito_groups: ["admin"])
    deleteUser(input: DeleteUserInput!): User!
        @aws_auth(cognito_groups: ["admin"])
}

type Query {
    getUser(input: GetUserInput): User
        @aws_auth(cognito_groups: ["user"])
    getUsers(input: GetUsersInput): UserConnection
        @aws_auth(cognito_groups: ["admin"])
}

schema {
    mutation: Mutation
    query: Query
}
