#set($beginOffset = $ctx.args.input.beginOffset)
#set($createdDate = $util.time.nowISO8601())
#set($endOffset = $ctx.args.input.endOffset)
#set($id = $ctx.args.input.id)
#set($order = $ctx.args.input.order)
#set($quoteId = $ctx.args.input.quoteId)
#set($text = $ctx.args.input.text)
#set($text = $text.replaceAll("\s+", " "))
#set($text = $text.trim())
#set($tokenId = $ctx.args.input.tokenId)
#set($updatedDate = $createdDate)
{
    "attributeValues": {
        "beginOffset": $util.dynamodb.toDynamoDBJson($beginOffset),
        "createdDate": $util.dynamodb.toDynamoDBJson($createdDate),
        "endOffset": $util.dynamodb.toDynamoDBJson($endOffset),
        "id": $util.dynamodb.toDynamoDBJson($id),
        "order": $util.dynamodb.toDynamoDBJson($order),
        "quoteId": $util.dynamodb.toDynamoDBJson($quoteId),
        "text": $util.dynamodb.toDynamoDBJson($text),
        "tokenId": $util.dynamodb.toDynamoDBJson($tokenId),
        "updatedDate": $util.dynamodb.toDynamoDBJson($updatedDate)
    },
    "condition" : {
        "expression": "(attribute_not_exists(pk) AND attribute_not_exists(sk))"
    },
    "key": {
        "pk": $util.dynamodb.toDynamoDBJson("SyntaxToken"),
        "sk": $util.dynamodb.toDynamoDBJson($id)
    },
    "operation" : "PutItem",
    "version" : "2018-05-29"
}
